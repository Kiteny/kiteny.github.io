{"version":3,"sources":["ui/Field/Field.jsx","ui/Field/index.js","ui/Button/Button.jsx","ui/Button/index.js","ui/Loader/Loader.jsx","features/user/UserForm/UserForm.jsx","features/user/UserForm/index.js","api/constants.js","api/userApi.js","features/user/_userSlice_/userSlice.js","features/user/_userSlice_/sagas/registrationSaga.js","features/user/_userSlice_/sagas/loginSaga.js","features/user/_userSlice_/sagas/fetchUserDataSaga.js","features/user/_userSlice_/sagas/index.js","features/user/constants.js","features/user/RegistrationForm/RegistrationForm.jsx","features/user/RegistrationForm/index.js","features/user/AuthorizationForm/AuthorizationForm.jsx","features/user/AuthorizationForm/index.js","features/rooms/_roomsSlice_/roomsSlice.js","api/roomsApi.js","features/rooms/_roomsSlice_/sagas/fetchRoomsSaga.js","features/rooms/_roomsSlice_/sagas/index.js","features/rooms/RoomsList/RoomsList.jsx","features/rooms/RoomsList/index.js","features/chat/_chatSlice_/chatSlice.js","api/chatApi.js","features/chat/_chatSlice_/sagas/sendMessageSaga.js","features/chat/_chatSlice_/sagas/subscribeNewMessagesSaga.js","features/chat/_chatSlice_/sagas/index.js","features/chat/Chat/components/SendForm/SendForm.jsx","features/chat/Chat/components/SendForm/index.js","features/chat/Chat/components/Messages/Messages.jsx","features/chat/Chat/components/Messages/index.js","features/chat/Chat/Chat.jsx","features/chat/Chat/index.js","app/components/CriticalErrorBoundary.jsx","app/App.jsx","app/index.js","app/_appSlice_/appSlice.js","app/store.js","index.jsx"],"names":["Field","name","type","forwardedRef","title","errorMessage","htmlFor","className","id","ref","defaultProps","React","forwardRef","props","Button","Loader","UserForm","onSubmit","buttonTitle","children","link","showLoader","API_KEY","UserApi","signUp","email","password","axios","method","headers","data","returnSecureToken","signIn","updateProfile","idToken","displayName","getUserData","setRefreshToken","refreshToken","localStorage","setItem","getRefreshToken","getItem","getAccessToken","grant_type","refresh_token","response","newRefreshToken","id_token","userSlice","createSlice","initialState","userData","status","error","isLoggedIn","reducers","writeUserData","state","payload","registration","authorization","fetchUserData","logout","message","writeError","reducer","actions","selectors","user","registrationSaga","take","call","username","apply","regResponse","put","isAxiosError","loginSaga","authorize","fork","fetchUserDataSaga","users","rootUserSaga","all","EMAIL_REGEXP","userActions","selectUserError","userSelectors","selectUserStatus","selectUserLoggedIn","getHumanMessage","RegistrationForm","userError","useSelector","userStatus","dispatch","useDispatch","useForm","register","handleSubmit","watch","errors","reset","emailValidation","required","pattern","value","passwordValidation","minLength","maxLength","validate","to","AuthorizationForm","roomsEntity","createEntityAdapter","roomsSlice","getInitialState","writeRoomsData","upsertMany","fetchRooms","removeAll","getSelectors","rooms","selectRoomsEntities","selectEntities","selectRoomsIds","selectIds","selectRoomById","selectById","selectRoomsStatus","RoomsApi","addNewRoom","accessToken","getRooms","fetchRoomsSaga","takeLatest","roomsData","transformedRoomsData","Object","keys","map","key","rootRoomsSaga","roomsActions","roomsSelectors","RoomsList","roomsStatus","useEffect","renderedRooms","onClick","aria-hidden","chatEntity","sortComparer","a","b","date","localeCompare","chatSlice","subscribeNewMessages","unsubscribeNewMessages","sendMessage","writeMessages","addMany","selectChatEntities","chat","ChatApi","getChat","chatId","nameAuthor","Date","toISOString","callback","eventSource","EventSource","addEventListener","event","JSON","parse","path","slice","close","bind","sendMessageSaga","selectUserData","takeEvery","select","subscribeNewMessagesSaga","unsubscribe","subscribe","chan","newMessages","eventChannel","emmiter","chatActions","SendForm","useState","setMessage","useParams","onSend","e","preventDefault","onChange","target","chatSelectors","Messages","messages","renderedMessages","elem","scrollTop","scrollHeight","Chat","CriticalErrorBoundary","hasError","this","setState","criticalError","Component","connect","app","App","component","exact","appSlice","stack","sagaMiddleware","createSagaMiddleware","configureStore","appReducer","userReducer","roomsReducer","chatReducer","middleware","run","root","chatRootSaga","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2326c85d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Field.scss';\n\nconst Field = ({\n  name, type, forwardedRef, title, errorMessage,\n}) => (\n  <label htmlFor={name} className=\"ui-field\">\n    <h4 className=\"ui-field__title\">\n      {title}\n      :\n    </h4>\n    <div className=\"ui-field__error-message\">{errorMessage}</div>\n    <input\n      name={name}\n      id={name}\n      type={type}\n      ref={forwardedRef}\n    />\n  </label>\n);\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n\n  forwardedRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n\nField.defaultProps = {\n  errorMessage: '',\n};\n\nexport default React.forwardRef((props, ref) => <Field {...props} forwardedRef={ref} />);\n","import Field from './Field';\n\nexport default Field;\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.scss';\n\nconst Button = ({ title, type }) => (\n  <button className=\"ui-button\" type={type}>\n    {title}\n  </button>\n);\n\nButton.propTypes = {\n  title: PropTypes.object.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n};\n\nButton.defaultProps = {\n  type: 'button',\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\n\nimport './Loader.scss';\n\nconst Loader = () => (\n  <div className=\"lds-ripple\">\n    <div />\n    <div />\n  </div>\n);\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { Button } from '../../../ui';\nimport Loader from '../../../ui/Loader/Loader';\nimport './UserForm.scss';\n\nconst UserForm = ({\n  onSubmit, title, buttonTitle, children, link, errorMessage, showLoader,\n}) => (\n  <form onSubmit={onSubmit} className=\"user-form app-border\">\n    <div className=\"user-form__errorMessage\">{ errorMessage }</div>\n\n    <h2 className=\"user-form__title\">\n      {title}\n    </h2>\n\n    <div className=\"user-form__fields-container\">\n      {children}\n    </div>\n\n    <div className=\"user-form__submit\">\n      {showLoader\n        ? <Loader />\n        : <Button title={buttonTitle} type=\"submit\" />}\n    </div>\n\n    <span className=\"user-form__link\">{link}</span>\n  </form>\n);\n\nUserForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  buttonTitle: PropTypes.string.isRequired,\n  errorMessage: PropTypes.string,\n  link: PropTypes.node,\n  showLoader: PropTypes.bool,\n\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nUserForm.defaultProps = {\n  link: null,\n  errorMessage: '',\n  showLoader: false,\n};\n\nexport default UserForm;\n","import UserForm from './UserForm';\n\nexport default UserForm;\n","/* eslint-disable import/prefer-default-export */\nexport const API_KEY = 'AIzaSyAhN5mGlbdn3ENY2HF0WXm415sMJOn9Zq4';\n","import axios from 'axios';\nimport { API_KEY } from './constants';\n\nconst UserApi = {\n  signUp(email, password) {\n    return axios(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        email,\n        password,\n        returnSecureToken: 'true',\n      },\n    });\n  },\n  signIn(email, password) {\n    return axios(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        email,\n        password,\n        returnSecureToken: 'true',\n      },\n    });\n  },\n  updateProfile(idToken, displayName) {\n    return axios(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${API_KEY}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        idToken,\n        displayName,\n        returnSecureToken: 'true',\n      },\n    });\n  },\n  getUserData(idToken) {\n    return axios(`https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${API_KEY}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        idToken,\n      },\n    });\n  },\n  setRefreshToken(refreshToken) {\n    localStorage.setItem('refreshToken', refreshToken);\n  },\n  getRefreshToken() {\n    return localStorage.getItem('refreshToken');\n  },\n  async getAccessToken() {\n    const refreshToken = this.getRefreshToken();\n\n    const response = await axios(`https://securetoken.googleapis.com/v1/token?key=${API_KEY}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        grant_type: 'refresh_token',\n        refresh_token: refreshToken,\n      },\n    });\n\n    const {\n      refresh_token: newRefreshToken,\n      id_token: idToken,\n    } = response.data;\n\n    this.setRefreshToken(newRefreshToken);\n\n    return idToken;\n  },\n};\n\nexport default UserApi;\n","/* eslint-disable import/prefer-default-export */\nimport { createSlice } from '@reduxjs/toolkit';\nimport UserApi from '../../../api/userApi';\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userData: null,\n    status: 'idle',\n    error: null,\n    isLoggedIn: !!UserApi.getRefreshToken(),\n  },\n  reducers: {\n    writeUserData: (state, { payload }) => {\n      state.status = 'success';\n      state.error = null;\n      state.userData = payload;\n      state.isLoggedIn = true;\n    },\n    registration: (state) => {\n      state.status = 'pending';\n    },\n    authorization: (state) => {\n      state.status = 'pending';\n    },\n    fetchUserData: (state) => {\n      state.status = 'pending';\n    },\n    logout: (state) => {\n      state.userData = null;\n      state.status = 'failure';\n      state.error = { message: 'LOGOUT' };\n      state.isLoggedIn = false;\n    },\n    writeError: (state, { error }) => {\n      state.status = 'failure';\n      state.userData = null;\n      state.error = error;\n      state.isLoggedIn = false;\n    },\n  },\n});\n\nexport const { reducer, actions } = userSlice;\n\nexport const selectors = {\n  selectUserError: (state) => state.user.error,\n  selectUserData: (state) => state.user.userData,\n  selectUserStatus: (state) => state.user.status,\n  selectUserLoggedIn: (state) => state.user.isLoggedIn,\n};\n","import {\n  apply, put, take, call,\n} from 'redux-saga/effects';\n\nimport { actions } from '../userSlice';\nimport UserApi from '../../../../api/userApi';\n\nconst { writeError, fetchUserData } = actions;\n\nexport default function* registrationSaga() {\n  while (true) {\n    const { payload } = yield take('user/registration');\n    yield call(registration, payload);\n  }\n}\n\nfunction* registration({ email, password, username }) {\n  try {\n    const regResponse = yield apply(UserApi, UserApi.signUp, [email, password]);\n    const { idToken, refreshToken } = regResponse.data;\n\n    UserApi.setRefreshToken(refreshToken);\n\n    yield apply(UserApi, UserApi.updateProfile, [idToken, username]);\n\n    yield put(fetchUserData());\n  } catch (e) {\n    if (e.isAxiosError) {\n      const { error } = e.response.data;\n      yield put({ ...writeError(), error });\n    } else {\n      throw e;\n    }\n  }\n}\n","import {\n  apply, fork, put, take,\n} from 'redux-saga/effects';\n\nimport { actions } from '../userSlice';\nimport UserApi from '../../../../api/userApi';\n\nconst { writeError, fetchUserData } = actions;\n\nexport default function* loginSaga() {\n  let isLoggedIn = !!UserApi.getRefreshToken();\n\n  while (true) {\n    if (!isLoggedIn) {\n      const { payload } = yield take('user/authorization');\n      yield fork(authorize, payload);\n    } else {\n      yield put(fetchUserData());\n    }\n\n    let action = yield take(['user/writeUserData', 'user/writeError']);\n\n    if (action.type === 'user/writeUserData') {\n      action = yield take('user/logout');\n    }\n\n    yield apply(UserApi, UserApi.setRefreshToken, ['']);\n\n    isLoggedIn = false;\n  }\n}\n\nfunction* authorize({ email, password }) {\n  try {\n    const regResponse = yield apply(UserApi, UserApi.signIn, [email, password]);\n    const { refreshToken } = regResponse.data;\n\n    UserApi.setRefreshToken(refreshToken);\n\n    yield put(fetchUserData());\n  } catch (e) {\n    if (e.isAxiosError) {\n      const { error } = e.response.data;\n      yield put({ ...writeError(), error });\n    } else {\n      throw e;\n    }\n  }\n}\n","import {\n  apply, call, put, take,\n} from 'redux-saga/effects';\n\nimport UserApi from '../../../../api/userApi';\nimport { actions } from '../userSlice';\n\nconst { writeUserData, writeError } = actions;\n\nexport default function* fetchUserDataSaga() {\n  while (true) {\n    yield take('user/fetchUserData');\n    yield call(fetchUserData);\n  }\n}\n\nfunction* fetchUserData() {\n  try {\n    const refreshToken = yield apply(UserApi, UserApi.getRefreshToken);\n    const idToken = yield apply(UserApi, UserApi.getAccessToken, [refreshToken]);\n\n    const userData = yield apply(UserApi, UserApi.getUserData, [idToken]);\n    yield put(writeUserData(userData.data.users[0]));\n  } catch (e) {\n    if (e.isAxiosError) {\n      const { error } = e.response.data;\n      yield put({ ...writeError(), error });\n    } else {\n      throw e;\n    }\n  }\n}\n","import { all } from 'redux-saga/effects';\n\nimport registrationSaga from './registrationSaga';\nimport loginSaga from './loginSaga';\nimport fetchUserDataSaga from './fetchUserDataSaga';\n\nexport default function* rootUserSaga() {\n  yield all([registrationSaga(), loginSaga(), fetchUserDataSaga()]);\n}\n","/* eslint-disable no-control-regex */\n/* eslint-disable import/prefer-default-export */\nexport const EMAIL_REGEXP = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport UserForm from '../UserForm';\nimport { Field } from '../../../ui';\nimport { userActions, userSelectors } from '../_userSlice_';\n\nimport { EMAIL_REGEXP } from '../constants';\n\nconst { registration } = userActions;\nconst { selectUserError, selectUserStatus, selectUserLoggedIn } = userSelectors;\n\nconst RegistrationForm = () => {\n  const userError = useSelector(selectUserError);\n  const userStatus = useSelector(selectUserStatus);\n  const isLoggedIn = useSelector(selectUserLoggedIn);\n\n  const dispatch = useDispatch();\n\n  const {\n    register, handleSubmit, watch, errors, reset,\n  } = useForm();\n\n  const onSubmit = ({ password, email, username }) => {\n    dispatch(\n      registration({ email, password, username }),\n    );\n\n    reset();\n  };\n\n  const userNameValidation = {\n    required: true,\n    minLength: { value: 3, message: 'Ошибка: от 3 до 20 символов' },\n    maxLength: { value: 20, message: 'Ошибка: от 3 до 20 символов' },\n  };\n\n  const emailValidation = {\n    required: true,\n    pattern: {\n      value: EMAIL_REGEXP,\n      message: 'Неверный формат email',\n    },\n  };\n\n  const passwordValidation = {\n    required: true,\n    minLength: { value: 6, message: 'Необходимо от 6 до 30 символов' },\n    maxLength: { value: 30, message: 'Необходимо от 6 до 30 символов' },\n    validate: (value) => value === watch('password') || 'Пароли не совпадают',\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/rooms\" />;\n  }\n\n  return (\n    <UserForm\n      onSubmit={handleSubmit(onSubmit)}\n      title=\"Регистрация\"\n      buttonTitle=\"Регистрация\"\n      link={<Link to=\"/auth\">Есть аккаунт?</Link>}\n      errorMessage={userError && getHumanMessage(userError.message)}\n      showLoader={userStatus === 'pending'}\n    >\n      <Field\n        title=\"Имя\"\n        name=\"username\"\n        type=\"text\"\n        ref={register(userNameValidation)}\n        errorMessage={errors.username && errors.username.message}\n      />\n      <Field\n        title=\"Email\"\n        name=\"email\"\n        type=\"text\"\n        ref={register(emailValidation)}\n        errorMessage={errors.email && errors.email.message}\n      />\n      <Field\n        title=\"Пароль\"\n        name=\"password\"\n        type=\"password\"\n        ref={register(passwordValidation)}\n        errorMessage={errors.password && errors.password.message}\n      />\n      <Field\n        title=\"Повторить пароль\"\n        name=\"password-repeat\"\n        type=\"password\"\n        ref={register(passwordValidation)}\n        errorMessage={errors['password-repeat'] && errors['password-repeat'].message}\n      />\n    </UserForm>\n  );\n};\n\nfunction getHumanMessage(message) {\n  switch (message) {\n    case 'EMAIL_EXISTS':\n      return 'Пользователь с данным email уже существует';\n    case 'INVALID_EMAIL':\n      return 'Недопустимый email';\n    default:\n      return '';\n  }\n}\n\nexport default RegistrationForm;\n","import RegistrationForm from './RegistrationForm';\n\nexport default RegistrationForm;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport UserForm from '../UserForm';\nimport { Field } from '../../../ui';\nimport { userSelectors, userActions } from '../_userSlice_';\n\nimport { EMAIL_REGEXP } from '../constants';\n\nconst { selectUserError, selectUserStatus, selectUserLoggedIn } = userSelectors;\nconst { authorization } = userActions;\n\nconst AuthorizationForm = () => {\n  const userError = useSelector(selectUserError);\n  const userStatus = useSelector(selectUserStatus);\n  const isLoggedIn = useSelector(selectUserLoggedIn);\n\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = ({ email, password }) => {\n    dispatch(authorization({ email, password }));\n  };\n\n  const emailValidation = {\n    required: true,\n    pattern: {\n      value: EMAIL_REGEXP,\n      message: 'Неверный формат email',\n    },\n  };\n\n  const passwordValidation = {\n    required: true,\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/rooms\" />;\n  }\n\n  return (\n    <UserForm\n      onSubmit={handleSubmit(onSubmit)}\n      title=\"Авторизация\"\n      buttonTitle=\"Войти\"\n      link={<Link to=\"/reg\">Нет аккаунта?</Link>}\n      errorMessage={userError && getHumanMessage(userError.message)}\n      showLoader={userStatus === 'pending'}\n    >\n      <Field\n        title=\"Email\"\n        name=\"email\"\n        type=\"text\"\n        ref={register(emailValidation)}\n        errorMessage={errors.email && errors.email.message}\n      />\n      <Field\n        title=\"Пароль\"\n        name=\"password\"\n        type=\"password\"\n        ref={register(passwordValidation)}\n        errorMessage={errors.password && errors.password.message}\n      />\n    </UserForm>\n  );\n};\n\nfunction getHumanMessage(message) {\n  switch (message) {\n    case 'EMAIL_NOT_FOUND':\n      return 'Пользователь не найден';\n    case 'INVALID_PASSWORD':\n      return 'Неверный пароль';\n    default:\n      return '';\n  }\n}\n\nexport default AuthorizationForm;\n","import AuthorizationForm from './AuthorizationForm';\n\nexport default AuthorizationForm;\n","import { createEntityAdapter, createSlice } from '@reduxjs/toolkit';\n\nconst roomsEntity = createEntityAdapter();\n\nconst roomsSlice = createSlice({\n  name: 'rooms',\n  initialState: roomsEntity.getInitialState({ status: 'idle', error: null }),\n  reducers: {\n    writeRoomsData: (state, payload) => {\n      roomsEntity.upsertMany(state, payload);\n      state.status = 'success';\n      state.error = null;\n    },\n    fetchRooms: (state) => {\n      state.status = 'pending';\n    },\n    writeError: (state, { error }) => {\n      state.status = 'failure';\n      roomsEntity.removeAll(state);\n      state.error = error;\n    },\n  },\n});\n\nexport const { actions, reducer } = roomsSlice;\n\nconst {\n  selectEntities: selectRoomsEntities,\n  selectIds: selectRoomsIds,\n  selectById: selectRoomById,\n} = roomsEntity.getSelectors((state) => state.rooms);\n\nexport const selectors = {\n  selectRoomsEntities,\n  selectRoomsIds,\n  selectRoomById,\n  selectRoomsStatus: (state) => state.rooms.status,\n};\n","import axios from 'axios';\n\nconst RoomsApi = {\n  async addNewRoom(name, accessToken) {\n    const response = await axios(`https://my-chat-1bfb6.firebaseio.com/rooms.json?auth=${accessToken}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        name,\n      },\n    });\n\n    return response.data;\n  },\n  async getRooms(accessToken) {\n    const response = await axios(`https://my-chat-1bfb6.firebaseio.com/rooms.json?auth=${accessToken}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return response.data;\n  },\n};\n\nexport default RoomsApi;\n","import { apply, put, takeLatest } from 'redux-saga/effects';\n\nimport RoomsApi from '../../../../api/roomsApi';\nimport UserApi from '../../../../api/userApi';\nimport { actions } from '../roomsSlice';\n\nconst { writeError, writeRoomsData } = actions;\n\nexport default function* fetchRoomsSaga() {\n  yield takeLatest('rooms/fetchRooms', fetchRooms);\n}\n\nfunction* fetchRooms() {\n  try {\n    const refreshToken = yield apply(UserApi, UserApi.getRefreshToken);\n    const idToken = yield apply(UserApi, UserApi.getAccessToken, [refreshToken]);\n\n    const roomsData = yield apply(RoomsApi, RoomsApi.getRooms, [idToken]);\n\n    const transformedRoomsData = Object.keys(roomsData).map((key) => ({\n      id: key,\n      ...roomsData[key],\n    }));\n\n    yield put(writeRoomsData(transformedRoomsData));\n  } catch (e) {\n    if (e.isAxiosError) {\n      const { error } = e.response.data;\n      yield put({ ...writeError(), error });\n    } else {\n      throw e;\n    }\n  }\n}\n","import { all } from 'redux-saga/effects';\nimport fetchRoomsSaga from './fetchRoomsSaga';\n\nexport default function* rootRoomsSaga() {\n  yield all([fetchRoomsSaga()]);\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Loader from '../../../ui/Loader/Loader';\n\nimport { roomsActions, roomsSelectors } from '../_roomsSlice_';\nimport { userActions } from '../../user';\n\nimport './RoomList.scss';\n\nconst { fetchRooms } = roomsActions;\nconst { logout } = userActions;\n\nconst { selectRoomsEntities, selectRoomsStatus } = roomsSelectors;\n\nconst RoomsList = () => {\n  const rooms = useSelector(selectRoomsEntities);\n  const roomsStatus = useSelector(selectRoomsStatus);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRooms());\n  }, []);\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  const renderedRooms = Object.keys(rooms).map((key) => (\n    <li key={key} className=\"room-list__list-item\">\n      <Link to={`/rooms/${key}`}>\n        {rooms[key].name}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"room-list app-border\">\n      <div className=\"room-list__top-bar\">\n        <button className=\"room-list__logout\" type=\"button\" onClick={handleLogout}>\n          <i className=\"fa fa-sign-out\" aria-hidden=\"true\" />\n        </button>\n      </div>\n      <h2 className=\"room-list__title\">Комнаты</h2>\n      <ul className=\"room-list__list\">\n        {roomsStatus === 'pending' && <div className=\"room-list__loader\"><Loader /></div>}\n        {renderedRooms}\n      </ul>\n    </div>\n  );\n};\n\nexport default RoomsList;\n","import RoomsList from './RoomsList';\n\nexport default RoomsList;\n","/* eslint-disable import/prefer-default-export */\nimport { createEntityAdapter, createSlice } from '@reduxjs/toolkit';\n\nconst chatEntity = createEntityAdapter({\n  sortComparer: (a, b) => a.date.localeCompare(b.date),\n});\n\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState: chatEntity.getInitialState({ status: 'idle', error: null }),\n  reducers: {\n    subscribeNewMessages: (state) => {\n      state.error = null;\n      state.status = 'idle';\n    },\n    unsubscribeNewMessages: (state) => {\n      chatEntity.removeAll(state);\n    },\n    sendMessage: (state) => {\n      state.status = 'pending';\n    },\n    writeError: (state, { error }) => {\n      state.status = 'failure';\n      state.error = error;\n    },\n    writeMessages: (state, { payload }) => {\n      state.status = 'success';\n      state.error = null;\n      chatEntity.addMany(state, payload);\n    },\n  },\n});\n\nconst { selectEntities: selectChatEntities } = chatEntity.getSelectors((state) => state.chat);\n\nexport const selectors = {\n  selectChatEntities,\n};\n\nexport const { reducer, actions } = chatSlice;\n","import axios from 'axios';\n\nconst ChatApi = {\n  getChat(accessToken, chatId) {\n    return axios(`https://my-chat-1bfb6.firebaseio.com/chats/${chatId}.json?auth=${accessToken}`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  },\n  sendMessage(accessToken, nameAuthor, chatId, message) {\n    return axios(`https://my-chat-1bfb6.firebaseio.com/chats/${chatId}/messages.json?auth=${accessToken}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        message,\n        nameAuthor,\n        date: new Date().toISOString(),\n      },\n    });\n  },\n  subscribeNewMessages(accessToken, chatId, callback) {\n    const eventSource = new EventSource(`https://my-chat-1bfb6.firebaseio.com/chats/${chatId}/messages.json?auth=${accessToken}`);\n    eventSource.addEventListener('put', (event) => {\n      const response = JSON.parse(event.data);\n\n      if (!response.data) {\n        return;\n      }\n\n      // Если в ответе больше одной записи\n      if (response.path === '/') {\n        const data = Object.keys(response.data).map((key) => ({\n          id: key,\n          ...response.data[key],\n        }));\n\n        callback(data);\n      } else {\n        const data = [{ id: response.path.slice(1), ...response.data }];\n\n        callback(data);\n      }\n    });\n\n    return eventSource.close.bind(eventSource);\n  },\n};\n\nexport default ChatApi;\n","import {\n  apply, put, select, takeEvery,\n} from 'redux-saga/effects';\n\nimport ChatApi from '../../../../api/chatApi';\nimport UserApi from '../../../../api/userApi';\nimport { userSelectors } from '../../../user';\nimport { actions } from '../chatSlice';\n\nconst { selectUserData } = userSelectors;\nconst { writeError } = actions;\n\nexport default function* sendMessageSaga() {\n  yield takeEvery('chat/sendMessage', sendMessage);\n}\n\nfunction* sendMessage({ payload }) {\n  try {\n    const { displayName } = yield select(selectUserData);\n    const { chatId, message } = payload;\n\n    const accessToken = yield apply(UserApi, UserApi.getAccessToken);\n\n    yield apply(ChatApi, ChatApi.sendMessage, [accessToken, displayName, chatId, message]);\n  } catch (e) {\n    if (e.isAxiosError) {\n      const { error } = e.response.data;\n      yield put({ ...writeError(), error });\n    } else {\n      throw e;\n    }\n  }\n}\n","import { eventChannel } from 'redux-saga';\nimport {\n  apply,\n  call, fork, put, take,\n} from 'redux-saga/effects';\n\nimport ChatApi from '../../../../api/chatApi';\nimport UserApi from '../../../../api/userApi';\n\nimport { actions } from '../chatSlice';\n\nconst { writeError, writeMessages } = actions;\n\nexport default function* subscribeNewMessagesSaga() {\n  while (true) {\n    const { payload: chatId } = yield take('chat/subscribeNewMessages');\n    yield call(subscribeNewMessages, chatId);\n  }\n}\n\nfunction* subscribeNewMessages(chatId) {\n  try {\n    const accessToken = yield apply(UserApi, UserApi.getAccessToken);\n    const chan = yield call(subscribe, chatId, accessToken);\n\n    yield fork(unsubscribe, chan);\n\n    while (true) {\n      const newMessages = yield take(chan);\n      yield put(writeMessages(newMessages));\n    }\n  } catch (e) {\n    if (e.isAxiosError) {\n      const { error } = e.response.data;\n      yield put({ ...writeError(), error });\n    } else {\n      throw e;\n    }\n  }\n}\n\nfunction subscribe(chatId, accessToken) {\n  return eventChannel((emmiter) => {\n    const cancelSubscribe = ChatApi.subscribeNewMessages(\n      accessToken,\n      chatId,\n      (data) => emmiter(data),\n    );\n\n    return cancelSubscribe;\n  });\n}\n\nfunction* unsubscribe(chan) {\n  yield take('chat/unsubscribeNewMessages');\n  chan.close();\n}\n","import { all } from 'redux-saga/effects';\nimport sendMessageSaga from './sendMessageSaga';\nimport subscribeNewMessagesSaga from './subscribeNewMessagesSaga';\n\nexport default function* rootRoomsSaga() {\n  yield all([sendMessageSaga(), subscribeNewMessagesSaga()]);\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Button } from '../../../../../ui';\nimport { chatActions } from '../../../_chatSlice_';\n\nimport './SendForm.scss';\n\nconst { sendMessage } = chatActions;\n\nconst SendForm = () => {\n  const [message, setMessage] = useState('');\n  const { chatId } = useParams();\n\n  const dispatch = useDispatch();\n\n  const onSend = async (e) => {\n    e.preventDefault();\n\n    dispatch(sendMessage({ chatId, message }));\n    setMessage('');\n  };\n  return (\n    <form className=\"message-form\" onSubmit={onSend}>\n      <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\n      <Button type=\"submit\" title={<i className=\"fa fa-paper-plane\" aria-hidden=\"true\" />} />\n    </form>\n  );\n};\n\nexport default SendForm;\n","import SendForm from './SendForm';\n\nexport default SendForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { chatSelectors } from '../../../_chatSlice_';\nimport './Messages.scss';\n\nconst { selectChatEntities } = chatSelectors;\n\nconst Messages = () => {\n  const messages = useSelector(selectChatEntities);\n\n  const scrollBottom = (elem) => {\n    if (elem) elem.scrollTop = elem?.scrollHeight;\n  };\n\n  const renderedMessages = Object.keys(messages).map((key) => (\n    <li key={key} className=\"messages-list__message\">\n      {messages[key].nameAuthor}\n      :\n      {' '}\n      {messages[key].message}\n    </li>\n  ));\n\n  return (\n    <ul className=\"messages-list\" ref={scrollBottom}>\n      {renderedMessages}\n    </ul>\n  );\n};\n\nexport default Messages;\n","import Messages from './Messages';\n\nexport default Messages;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\n\nimport SendForm from './components/SendForm';\nimport Messages from './components/Messages';\n\nimport { chatActions } from '../_chatSlice_';\n\nimport './Chat.scss';\n\nconst { subscribeNewMessages, unsubscribeNewMessages } = chatActions;\n\nconst Chat = () => {\n  const { chatId } = useParams();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(subscribeNewMessages(chatId));\n    return () => dispatch(unsubscribeNewMessages());\n  }, []);\n\n  return (\n    <div className=\"app-border chat\">\n      <div className=\"chat__top-bar\">\n        <Link className=\"chat__back\" to=\"/rooms\">\n          <i className=\"fa fa-chevron-left\" />\n        </Link>\n      </div>\n      <Messages />\n      <SendForm />\n    </div>\n  );\n};\n\nexport default Chat;\n","import Chat from './Chat';\n\nexport default Chat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n  const { criticalError } = state.app;\n  return { criticalError };\n}\n\nclass CriticalErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children, criticalError } = this.props;\n\n    if (hasError || criticalError) {\n      return <h1>Что-то пошло сильно не так! Извините.</h1>;\n    }\n\n    return children;\n  }\n}\n\nCriticalErrorBoundary.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  criticalError: PropTypes.object,\n};\n\nCriticalErrorBoundary.defaultProps = {\n  criticalError: null,\n};\n\nexport default connect(mapStateToProps)(CriticalErrorBoundary);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router, Redirect, Route, Switch,\n} from 'react-router-dom';\n\nimport { AuthorizationForm, RegistrationForm, userSelectors } from '../features/user';\nimport { RoomsList } from '../features/rooms';\nimport { Chat } from '../features/chat';\n\nimport './App.scss';\nimport CriticalErrorBoundary from './components/CriticalErrorBoundary';\n\nconst { selectUserLoggedIn } = userSelectors;\n\nconst App = () => {\n  const isLoggedIn = useSelector(selectUserLoggedIn);\n\n  return (\n    <CriticalErrorBoundary>\n      <Router>\n        <Switch>\n          <Route path=\"/reg\" component={RegistrationForm} exact />\n          <Route path=\"/auth\" component={AuthorizationForm} exact />\n\n          {isLoggedIn && <Route path=\"/rooms/:chatId\" component={Chat} />}\n          {isLoggedIn && <Route path=\"/rooms\" component={RoomsList} />}\n\n          {isLoggedIn && <Redirect to=\"/rooms\" />}\n          <Redirect to=\"/auth\" />\n        </Switch>\n      </Router>\n    </CriticalErrorBoundary>\n  );\n};\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    criticalError: null,\n  },\n  reducers: {\n    criticalError(state, { error }) {\n      state.criticalError = error.stack;\n    },\n  },\n});\n\nexport const { reducer, actions } = appSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, put } from 'redux-saga/effects';\n\nimport { appReducer } from './_appSlice_';\nimport { userReducer, rootUserSaga } from '../features/user';\nimport { roomsReducer, rootRoomsSaga } from '../features/rooms';\nimport { chatReducer, chatRootSaga } from '../features/chat';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default configureStore({\n  reducer: {\n    app: appReducer,\n    user: userReducer,\n    rooms: roomsReducer,\n    chat: chatReducer,\n  },\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(function* root() {\n  try {\n    yield all([\n      rootUserSaga(),\n      rootRoomsSaga(),\n      chatRootSaga(),\n    ]);\n  } catch (e) {\n    yield put({ type: 'app/criticalError', error: e });\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './app';\nimport store from './app/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}